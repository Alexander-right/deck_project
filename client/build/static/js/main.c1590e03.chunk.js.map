{"version":3,"sources":["components/Navigation/Navigation.js","components/RegAuth/Auth/Auth.js","components/Home/Home.js","components/RegAuth/Form/Form.js","components/RegAuth/FormWrapper/FormWrapper.js","components/Application/Card/Card.js","components/Application/MyCards/MyCards.js","Redux/actionTypes.js","components/Application/DeckChooser/DeckChooser.js","components/Application/InputAndCardTable/Application.js","components/Chat/Chat.js","App.jsx","Redux/InitialState.js","Redux/reducer/reducer.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","RegAuth_Auth_Auth","Auth","Object","classCallCheck","this","authenticated","Home","Form","props","_this","_super","call","state","login","password","SendRequest","bind","assertThisInitialized","HandleChange","e","preventDefault","type","xhr","XMLHttpRequest","open","concat","console","log","setRequestHeader","onreadystatechange","readyState","status","auth","document","cookie","responseText","alert","statusText","data","JSON","stringify","send","setState","[object Object]","target","name","value","onSubmit","placeholder","onChange","forButton","Component","buttonLogOut","logout","LogRegister","_ref","component","rest","objectWithoutProperties","react_router","assign","render","isAuthenticated","onClick","RegAuth_Form_Form","DragSource","beginDrag","card","endDrag","monitor","getItem","getDropResult","canDrag","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","opacity","refType","buttonDisplay","cardColPosition","Fragment","cjs","src","img","ref","style","display","deleteCard","cardIndex","alt","MyCards","getCardSetWinRate","_this2","topWinrate","parse","response","cardFromProps","cards","averageOfCardsCost","mapCards","ReduxCards","ComponentIndex","length","localStorageCards","localStorage","i","onAddCard","prevProps","prevState","snapshot","setItem","index","onDeleteCard","costs","map","cost","reduce","accum","currentValue","toFixed","_this3","Card_Card","key","dbfId","id","cardId","cardName","post","href","url","winrate","_this$props","canDrop","isOver","connectDropTarget","backgroundColor","mapWinrateDecks","React","dispatch","payload","DropTarget","drop","Drop","dropTarget","ADDCARD","DELETECARD","ADDDECK","DeckChooser","_React$Component","inherits","createSuper","deckLinks","Decks","link","mapDeckRoutes","route","path","Application_MyCards_MyCards","addDeck","createClass","AddDeck","actionTypes","Application","getCardByClass","charAt","toUpperCase","slice","toLowerCase","getCard","cardForMyCards","counter","handleChange","sort","b","cardsToShow","undefined","Application_DeckChooser_DeckChooser","DragDropContext","HTML5Backend","Chat","apply","arguments","App","token","matches","match","RegExp","replace","decodeURIComponent","getCookie","components_Navigation_Navigation","SteamApp","InitialState","store","createStore","action","push","toConsumableArray","splice","ReactDOM","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.c1590e03.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../ComponentsCss.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.scss'\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <ul className=\"navigation\">\r\n            <li className=\"nav-item\"><Link to={\"/Home\"}>Главная</Link></li>\r\n            <li className=\"nav-item\"><Link to={\"/Application\"}>Приложение</Link></li>\r\n            <li className=\"nav-item\"><Link to={\"/Logg\"}>Войти</Link></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Navigation;","class Auth {\r\n    constructor() {\r\n        this.authenticated = false;\r\n    }\r\n\r\n    login() {\r\n        this.authenticated = true;\r\n    }\r\n\r\n    logout() {\r\n        this.authenticated = false;\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.authenticated;\r\n    }\r\n}\r\nexport default new Auth();","import React from 'react';\r\n\r\nexport const Home = () => {\r\n    return <div>Домашняя страница</div>\r\n};","import React, {Component} from 'react';\r\n//import '../../ComponentsCss.scss';\r\nimport PropTypes from 'prop-types'\r\nimport auth from './../Auth/Auth.js';\r\n\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: '',\r\n            password: ''\r\n        };\r\n        this.SendRequest = this.SendRequest.bind(this);\r\n        this.HandleChange = this.HandleChange.bind(this)\r\n    }\r\n\r\n    SendRequest(e){\r\n        e.preventDefault();\r\n        const type = this.props.type;\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('POST', `/api/v1/${this.props.type}`, true);\r\n        console.log(this.props.type);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.onreadystatechange = function () {\r\n            if (this.readyState !== 4) return;\r\n\r\n            if (this.status !== 200) {\r\n                alert('ошибка: ' + (this.status ? this.statusText : 'запрос не удался'));\r\n                return;\r\n            }\r\n            if (type === 'authorization') { auth.login() }\r\n            document.cookie = \"token=\" + xhr.responseText;\r\n            console.log(document.cookie);\r\n        };\r\n        let data = JSON.stringify({\"login\": this.state.login, \"password\": this.state.password});\r\n        xhr.send(data);\r\n       // xhr.setRequestHeader(\"Cookie\", xhr.responseText);\r\n    };\r\n\r\n    HandleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.SendRequest} className=\"Authorization\">\r\n                <input type=\"text\" name={'login'} placeholder={\"login\"} value={this.state.login}\r\n                       onChange={this.HandleChange} className={this.props.type + \"__login\"}/>\r\n                <input type=\"text\" name={'password'} placeholder={\"password\"} value={this.state.password}\r\n                       onChange={this.HandleChange} className={this.props.type + \"__password\"}/>\r\n                <button>{this.props.forButton}</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n    forButton: PropTypes.string,\r\n    type: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport Form from '../Form/Form'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../Auth/Auth\";\r\n\r\nlet buttonLogOut = () => {\r\n    auth.logout();\r\n};\r\nexport const LogRegister = ({component: Component, ...rest}) =>{\r\n        return(\r\n            <Route\r\n                {...rest}\r\n                render={(props) => auth.isAuthenticated() === true\r\n                    ?   <div>Логин\r\n                            <button onClick={buttonLogOut}>Выход</button>\r\n                        </div>\r\n                    :   <div>\r\n                            <Form forButton={\"Авторизироваться\"} type={\"authorization\"}/>\r\n                            <Form forButton={\"Зарегистрироваться\"} type={\"register\"}/>\r\n                        </div>\r\n                }\r\n            />\r\n        );\r\n};\r\n","import React from 'react'\r\nimport {DragPreviewImage} from 'react-dnd'\r\nimport {DragSource} from \"react-dnd\"\r\nimport PropTypes from 'prop-types'\r\nimport './style.scss'\r\n\r\nfunction Card(props) {\r\n    const {isDragging, connectDragSource, connectDragPreview, canDrag} = props;\r\n    let opacity = isDragging ? 0.5 : 1;\r\n    let refType = canDrag ? connectDragSource : null;\r\n    let className = canDrag ? \"d-inline-flex\" : \"d-inline-block\";\r\n    let buttonDisplay = canDrag ? \"none\" : \"display\";\r\n    let cardColPosition = canDrag ? \"col-md-4\" : \"col-md-6\";\r\n    return (\r\n        <>\r\n            <DragPreviewImage connect={connectDragPreview} src={props.img}/>\r\n            <div ref={refType} className={\"hs_card \" + className + \" \" + cardColPosition}>\r\n                <button className={\"hs_card__button\"} style={{display: buttonDisplay}}\r\n                        onClick={props.deleteCard && props.deleteCard.bind(this, props.cardIndex)}>delete\r\n                </button>\r\n                <img style={{opacity: opacity}} src={props.img} alt=\"\"/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    canDrag: PropTypes.bool,\r\n    isDragging: PropTypes.bool,\r\n    connectDragSource: PropTypes.func,\r\n    connectDragPreview: PropTypes.func\r\n};\r\nexport {Card};\r\n\r\nexport default DragSource('card',\r\n    {\r\n        beginDrag: (props) => ({card: props}),\r\n        endDrag(props, monitor) {\r\n            const item = monitor.getItem();\r\n            const dropResult = monitor.getDropResult();\r\n        },\r\n        canDrag: (props, monitor) => {\r\n            return props.canDrag;\r\n        }\r\n    },\r\n    (connect, monitor) => ({\r\n        connectDragSource: connect.dragSource(),\r\n        connectDragPreview: connect.dragPreview(),\r\n        isDragging: monitor.isDragging(),\r\n    })\r\n)(Card);","import React from 'react'\r\nimport {DropTarget} from \"react-dnd\"\r\nimport Card from \"../Card/Card\";\r\nimport {connect} from \"react-redux\";\r\nimport './MyCards.scss';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst style = {};\r\n\r\nclass MyCards extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardFromProps: null,\r\n            cards: null,\r\n            averageOfCardsCost: 0,\r\n            topWinrate: null\r\n        };\r\n        this.deleteCard = this.deleteCard.bind(this);\r\n        this.getCardSetWinRate = this.getCardSetWinRate.bind(this);\r\n        this.mapCards = this.mapCards.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        ReduxCards: PropTypes.array\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.ReduxCards[this.props.ComponentIndex].length === 0) {\r\n            let localStorageCards = localStorage.getItem(`localStorageCardsFor_${this.props.ComponentIndex}`);\r\n            if (localStorageCards) {\r\n                for (let i = 0; i < JSON.parse(localStorageCards).length; i++) {\r\n                    this.props.onAddCard(JSON.parse(localStorageCards)[i], this.props.ComponentIndex)\r\n                }\r\n            } else {\r\n                console.log(this.props)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(this.props)\r\n        if (prevProps.cards !== this.props.cards ) {\r\n            this.props.onAddCard(this.props.cards[0], this.props.ComponentIndex);\r\n            localStorage.setItem(`localStorageCardsFor_${this.props.ComponentIndex}`, JSON.stringify(this.props.ReduxCards[this.props.ComponentIndex]))\r\n            console.log(this.props)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.setItem(`localStorageCardsFor_${this.props.ComponentIndex}`, JSON.stringify(this.props.ReduxCards[this.props.ComponentIndex]))\r\n    }\r\n\r\n    deleteCard(index) {\r\n        this.props.onDeleteCard(index, this.props.ComponentIndex)\r\n    }\r\n\r\n    getCardSetWinRate = function (e) {\r\n        e.preventDefault();\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/api/v1/Application/getCardPackWinrate', true);\r\n        xhr.send(\"Карты\");\r\n        xhr.onreadystatechange = (e) => {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n                this.setState({topWinrate: JSON.parse(xhr.response)});\r\n            }\r\n        }\r\n    };\r\n\r\n    averageOfCardsCost() {\r\n        if (this.props.ReduxCards[this.props.ComponentIndex].length !== 0) {\r\n            const costs = this.props.ReduxCards[this.props.ComponentIndex].map((card, index) => {\r\n                return card.card.cost\r\n            });\r\n            console.log(this.props.ReduxCards[this.props.ComponentIndex].map((card, index) => {\r\n                return card.card.cost\r\n            }), \"reduce\");\r\n            return (costs.reduce((accum, currentValue) => accum + currentValue) / costs.length).toFixed(2);\r\n        }\r\n    }\r\n\r\n    mapCards(){\r\n        return (this.props.ReduxCards[this.props.ComponentIndex] != false) ? this.props.ReduxCards[this.props.ComponentIndex].map((card, index) => {\r\n            return (<Card deleteCard={this.deleteCard} cardIndex={index} key={card.dbfId} img={card.img}\r\n                          id={card.cardId} name={card.cardName} cost={card.card.cost}/>)\r\n        }) : \"Пусто\"\r\n    };\r\n\r\n    mapWinrateDecks(){\r\n       return this.state.topWinrate !== null ? this.state.topWinrate.map((post, index) => {\r\n            return (<div className={\"winrate_deck\"} key={index}><a\r\n                href={post.url}>{post.name}</a> винрейт: {post.winrate}</div>)\r\n        }) : null\r\n    };\r\n\r\n    render() {\r\n        const {canDrop, isOver, connectDropTarget} = this.props;\r\n        const isActive = canDrop && isOver;\r\n        let backgroundColor = isActive ? \"#359c4b61\" : 'inherit';\r\n\r\n        return (\r\n            <div ref={connectDropTarget} className=\"MyCards col-12\" >\r\n                <span>Моя колода</span>\r\n                <div className=\"MyCards__result col-12\" style={Object.assign({}, style, {backgroundColor})}>\r\n                    {this.mapCards()}\r\n                </div>\r\n                <span>средняя цена карты: {this.averageOfCardsCost()}</span>\r\n                <div className={\"pt-5\"}>\r\n                    <button className={\"my-3\"} onClick={this.getCardSetWinRate}>get winrate</button>\r\n                    <div className={\"winrate_result\"}>\r\n                        {this.mapWinrateDecks()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        ReduxCards: state\r\n    }),\r\n    dispatch => ({\r\n        onAddCard: (card, index) => {\r\n            dispatch({type: `ADD_CARD`, payload: {card: card, index: index}});\r\n        },\r\n        onDeleteCard: (cardIndex, index) => {\r\n            dispatch({type: `DELETE_CARD`, payload: {cardIndex: cardIndex, index: index}})\r\n        }\r\n    })\r\n)(DropTarget('card', {\r\n        drop(props, monitor) {\r\n            props.Drop(monitor.getItem())\r\n        }\r\n    },\r\n    (connect, monitor) => ({\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        canDrop: monitor.canDrop(),\r\n    })\r\n)(MyCards))\r\n\r\n","export const ADDCARD = \"ADD_CARD\";\nexport const DELETECARD = \"DELETE_CARD\";\nexport const ADDDECK = \"ADD_DECK\";","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Route} from 'react-router'\r\nimport MyCards from \"../MyCards/MyCards\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actionTypes from './../../../Redux/actionTypes'\r\nimport PropTypes from 'prop-types'\r\nimport './style.scss'\r\n\r\nexport class DeckChooser extends React.Component {\r\n\r\n    static propTypes = {\r\n        Decks: PropTypes.array\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            deckLinks: this.props.Decks.map((link, index) => {\r\n                return (\r\n                    <li key={\"LinkForMyCards\" + (index + 1)} className={\"nav-item\"}><Link\r\n                        to={\"/Application/deck_\" + (index + 1)}>{index + 1}</Link></li>)\r\n            }),\r\n            mapDeckRoutes: this.props.Decks.map((route, index) => {\r\n                return (<Route key={\"RouteForMyCards_\" + (index + 1)} path={\"/Application/deck_\" + (index + 1)}\r\n                               render={(props) => <MyCards key={\"MyCards_\" + (index + 1)} ComponentIndex={index}\r\n                                                           cards={this.props.cards}\r\n                                                           canDrag={false}\r\n                                                           Drop={this.props.Drop}/>}/>)\r\n            })\r\n        };\r\n        this.addDeck = this.addDeck.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({\r\n                deckLinks: this.props.Decks.map((link, index) => {\r\n                    return (\r\n                        <li key={\"deck_\" + index + 1} className={\"nav-item\"}><Link to={\"/Application/deck_\" + (index + 1)}>{index + 1}</Link>\r\n                        </li>)\r\n                }),\r\n                mapDeckRoutes: this.props.Decks.map((route, index) => {\r\n                    return (<Route key={\"deck_\" + index + 1} path={\"/Application/deck_\" + (index + 1)}\r\n                                   render={(props) => <MyCards ComponentIndex={index} cards={this.props.cards}\r\n                                                               canDrag={false}\r\n                                                               Drop={this.props.Drop}/>}/>)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    addDeck() {\r\n        this.props.AddDeck();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"col-5 mt-4\"}>\r\n                <ul className={\"deck__navigation\"}>\r\n                    {this.state.deckLinks}\r\n                    <li className={\"nav-item__add-button\"} onClick={this.addDeck}>+</li>\r\n                </ul>\r\n                <div className={\"deck-wrapper\"}>\r\n                    {this.state.mapDeckRoutes}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Decks: state\r\n    }\r\n};\r\nconst mapdispatchToProps = (dispatch) => ({\r\n    AddDeck: () => dispatch({type: actionTypes.ADDDECK})\r\n});\r\n\r\nexport default connect(mapStateToProps, mapdispatchToProps)(DeckChooser)\r\n\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport {DragDropContext, DragDropContextProvider} from \"react-dnd\";\r\nimport DeckChooser from \"../DeckChooser/DeckChooser\";\r\n\r\nclass Application extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counter: 0,\r\n            value: '',\r\n            cards: null,\r\n            cardForMyCards: null\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getCardByClass = this.getCardByClass.bind(this);\r\n        this.getCard = this.getCard.bind(this)\r\n    }\r\n\r\n    getCardByClass = function (e) {\r\n        e.preventDefault();\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/api/v1/Application/getCards', true);\r\n        xhr.send(this.state.value.charAt(0).toUpperCase() + this.state.value.slice(1).toLowerCase());\r\n        xhr.onreadystatechange = (e) => {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n                this.setState({cards: JSON.parse(xhr.responseText)})\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.cards !== this.state.cards) {\r\n            this.setState({\r\n                cards: this.state.cards.sort((a, b) => {\r\n                    return typeof a.img === \"string\" ? -1 : 1\r\n                })\r\n            });\r\n            this.setState({\r\n                cardsToShow: this.state.cards.map(card => {\r\n                    return (\r\n                        <Card canDrag={true} img={card.img === undefined ? \"https://i.imgur.com/3NrKqzF.png\" : card.img}\r\n                              cardName={card.name} id={card.dbfId} key={card.dbfId} card={card}/>)\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({value: e.target.value});\r\n    };\r\n\r\n    getCard = (card) => {\r\n        this.setState({cardForMyCards: [card.card, this.state.counter++]})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"App__search\">\r\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.value}\r\n                           placeholder={\"Введите расу, класс или фракцию карты\"} className={\"col-sm-6 col-md-5\"}/>\r\n                    <button className=\"App__button col-sm-2 col-md-1\" onClick={this.getCardByClass}>Поиск</button>\r\n                </div>\r\n                <div className=\"cards-wrapper col-12\">\r\n                    <div className=\"App__result col-7 mt-4\">\r\n                        {this.state.cardsToShow}\r\n                    </div>\r\n                    <DeckChooser className={\"col-12\"} canDrag={false} cards={this.state.cardForMyCards}\r\n                                 Drop={this.getCard}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DragDropContext(HTML5Backend)(Application)\r\n","import React from 'react';\r\nimport './style/ChatStyle.scss'\r\n\r\n\r\nexport class Chat extends React.Component{\r\n\r\n    componentDidMount() {\r\n       /* const socket = new WebSocket(\"ws://localhost:3001\");\r\n        socket.onopen = () => {\r\n            console.log(\"Connected by Websocket\")\r\n        }*/\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div >\r\n                <div className={\"Chat__wrapper\"}>\r\n                    <div className={\"Chat\"}>\r\n                        <div className={\"Chat__messages\"}>сообщения</div>\r\n                        <div className={\"Chat__wrapperForButtons\"}>\r\n                            <input className={\"Chat__input\"}/>\r\n                            <button className={\"Chat__button\"}>Отправить</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React  from 'react';\nimport './App.scss';\nimport Navigation from './components/Navigation/Navigation';\nimport { BrowserRouter  } from 'react-router-dom'\nimport { Route } from 'react-router';\nimport auth from './components/RegAuth/Auth/Auth'\nimport {Home} from './components/Home/Home'\nimport {LogRegister} from './components/RegAuth/FormWrapper/FormWrapper'\nimport SteamApp from \"./components/Application/InputAndCardTable/Application\";\nimport {Chat} from \"./components/Chat/Chat\";\n\nclass App extends React.Component{\n    componentDidMount(){\n        function getCookie(name) {\n            let matches = document.cookie.match(new RegExp(\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n            ));\n            return matches ? decodeURIComponent(matches[1]) : undefined;\n        }\n        let token = getCookie(\"name\");\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST', '/api/v1/tokenvalidate', true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.onreadystatechange = function() {\n            if (this.readyState !== 4) return;\n\n            if (this.status !== 200) {\n                alert( 'ошибка: ' + (this.status ? this.statusText : 'запрос не удался') );\n                return;\n            }\n            if(xhr.responseText === \"true\"){\n                auth.login();\n            }\n        };\n        xhr.send(token);\n    }\n    render(){\n        return(\n                <BrowserRouter>\n                    <div className=\"App\">\n                            <Navigation/>\n                            <Route path=\"/Home\" component={Home}/>\n                            <Route path=\"/Logg\" component={LogRegister}/>\n                            <Route path=\"/Application\" component={SteamApp}/>\n                            <Route path={\"/Chat\"} component={Chat} />\n                    </div>\n                </BrowserRouter>\n        );\n    }\n}\nexport default App;\n","export default [\n    []\n]\n\n","import * as actionTypes from '../actionTypes';\nimport InitialState from '../InitialState'\nimport {createStore} from \"redux\";\n\n\nexport function cardsForMyCards(state = InitialState, action) {\n    switch (action.type) {\n        case actionTypes.ADDDECK:\n            state.push([]);\n            return ([...state]);\n        case actionTypes.ADDCARD:\n            state[action.payload.index] = [...state[action.payload.index], action.payload.card];\n            return ([...state]);\n        case actionTypes.DELETECARD:\n            state[action.payload.index].splice(action.payload.cardIndex, 1);\n            return ([...state]);\n        default:\n            return ([...state])\n    }\n}\n\nexport const store = createStore(cardsForMyCards);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./Redux/reducer/reducer\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}